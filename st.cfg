#!/bin/bash
#
#	Sets and loads all required and provied
#	VARIABLES and functions
#
#	Internal Paths
#
	if [ ! $(type -p tui) ]
	then	tURL="http://sea.fedorapeople.org"
		# This should not be displayed anyway...
		echo -e "Requires: tui
			\rYou might want to use the repo file:\t$tURL/all.repo
			\rOR\t\tvisit: $tURL/Review/tui"
		exit 1
	else	source tui
	fi

	[[ -z "$stDir" ]] && stDir="/usr/share/script-tools"
#
#	Default paths
#
	[[ -f $HOME/.config/user-dirs.dirs ]] && source $HOME/.config/user-dirs.dirs
	[[ -z $XDG_DOWNLOAD_DIR ]] && XDG_DOWNLOAD_DIR=$HOME/Downloads
	ST_CONF_DIR="$stDir/conf"
	ST_DOCS_DIR="$stDir/docs"
	ST_FUNC_DIR="$stDir/functions"
	export ST_MENU_DIR="$stDir/menu"
	ST_TEMPLATE_DIR="$stDir/templates"
	#
	#	Paths in userconfig
	#
	ST_USER_DIR="$HOME/.config/script-tools"
	ST_CACHE_DIR="$HOME/.cache"
	ST_USER_CONF="$ST_USER_DIR/conf"
	ST_USER_FUNCTIONS="$ST_USER_CONF/functions"
	ST_USER_SCRIPTS="$ST_USER_CONF/scripts"
	ST_USER_PRJ="$ST_USER_CONF/prj"
	ST_USER_NAS="$ST_USER_CONF/nas"
	ST_USER_WIFI="$ST_USER_CONF/wifi"
	ST_USER_KS="$ST_USER_CONF/ks"
	[[ ! -d $ST_USER_DIR ]] && \
		firstrun=true || \
		firstrun=false
#
#	Load functions by priority
#	Arrange items in list, currently used:	sys, mod
#	everything else will be loaded after
#
	#ST_FUNCTION_LOAD_LIST="sys mod"
#
#	Load TUI enviornment
#
    	if [[ "$TERM" = xterm ]]
    	then	EDITOR="$EDITOR_GUI"
    		BROWSER="$BROWSER_GUI"
    	else	EDITOR="$EDITOR_CLI"
    		BROWSER="$BROWSER_CLI"
    	fi
    	for folder in "$ST_FUNC_DIR" "$ST_USER_FUNCTIONS" "$ST_USER_CONF"
	do	system=""           # 1st prio
		modules=""          # 2nd prio
		otherlist=""        # 3rd prio
		if [[ -d "$folder" ]]
		then	for thisfile in $(ls "$folder")
			do	if [[ -f "$folder/$thisfile" ]]
				then	case "${thisfile:0:3}" in
					"sys")	system="$system $folder/$thisfile"		;;
					"mod")	modules="$modules $folder/$thisfile"		;;
					*)	otherlist="$otherlist $folder/$thisfile"	;;
					esac
				fi
			done
		fi
		for mod in ${system} ${modules} ${otherlist}; do source "$mod" && printf ".";done
        done
	sH() { # ["STRING"]]
	#
	#
		#clear
		if [[ -z $1 ]]
		then	addHeader=""
		elif [[ press = "$1" ]]
		then	addHeader="Press [ENTER] to continue : "
		else	addHeader="$@ : "
		fi
		tui-header "Script-Tools ($stVer)" "$addHeader$(DATE) $(TIME)"
		[[ press = "$1" ]] && read buffer
	}
	sT() { tui-title "${@}" ; }
	sE() { tui-echo "${@}" ; }
	sP() { tui-printf "${@}" ; }
	#ask() { tui-bol-yesno "$1" ; return $?;}
	#
	#	First use?
	#
	if [[ $firtrun ]]
	then	sH
		tui-title "First time setup of Script-Tools by sea"
		tui-bol-dir $ST_USER_DIR/{cache,conf,functions,scripts,prj,nas,wifi} #2&> /dev/zero || \
		#cp $ST_CONF_DIR $ST_USER_CONF
		
		if [[ -f "$ST_MENU_DIR/fas" ]]
		then	echo "#TODO FAS"
		fi
		
		if [[ -f "$ST_MENU_DIR/dev" ]]
		then	echo "#TODO DEV"
		fi
		
		if [[ -f "$ST_MENU_DIR/nas" ]]
		then	echo "#TODO NAS"
		fi
		
		st conf ig
		tui-echo "Thanks for configuring Script-Tools."
		tui-echo "Please restart Script-Tools to apply possible changes."
		exit
	fi
